Task: Please generate an agent-based model that simulate the electric vehicle driving and charging situation. This ABM should compose EV, station, SmartScheduler, EVModel, The EV are described by SOC, range_fe, agent_type, fuel_consumption, remaining_range, origin, charging_start, prob_charging, charge_decision_time, find_next_charging_station, target, route, route_index, currentRoad, distance_along_edge, pos_igraph_id, station_nodes, stations, finised_time, charge_station, current_station, status, veh_speed, connector_code, pos, lat, lon, timestart, capacity, charging_start_soc, charging_end_soc, destination, capacity, pos, distance_travelled, destination_igraph_id, model, destination, destination_igraph_id, trip_distance, model, model, model, model, The EV should have activities: update_location, update_route, update_station, find_next_station, finish, distance_to_next_node, update_status, charge, update_station_object_agent, charge_makes_sense, distance_to_des, move, status_switch, step, The station are described by max_power, timestart, charge_station, dcfc_count, dcfc_var_charging_price_unit, dcfc_fixed_charging_price, dcfc_var_charging_price, dcfc_fixed_parking_price, dcfc_var_parking_price, dcfc_var_parking_price_unit, agent_type, plugs_in_use, waiting_evs_count, restaurents, current_power_draw, queued_evs, igraph_index, energy_consumed, lat, lon, status, veh_speed, SOC, distance_travelled, remaining_range, route_index, The station should have activities: step, The SmartScheduler are described by model, steps, time, _agents, The SmartScheduler should have activities: add, remove, step, get_agent_count, agent_buffer, The EVModel are described by steptime, grid, _seed, schedule, igraph, nodes, network, station_nodes, network, pos, data_collector, next_id, schedule, next_id, schedule, The EVModel should have activities: step, run, You can also use package mesa to help model.
Programming Language: Python.
Progam:
